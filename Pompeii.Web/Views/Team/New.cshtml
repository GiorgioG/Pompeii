@model object

@{
    ViewBag.Title = "title";
    Layout = "_Layout";
}
<h1 class="has-text-white title">New Team</h1>

<div class="box">

    <form id="app" asp-controller="Team" asp-action="Post" v-on:submit="checkForm">


        <div class="field">
            <label class="label">Team Name</label>
            <div class="control">
                <input class="input" v-model="name" name="name" id="name" type="text" placeholder="Choose a unique name." required maxlength="32">
            </div>
        </div>
        <transition name="fade">
            <div v-if="errors.length>0">
                <div class="notification is-danger site-notification" v-for="error in errors">{{ error }}</div>
            </div>
        </transition>
            <div class="field is-grouped" style="margin-top:10px">
                <p class="control">
                    <button class="button is-primary" type="submit">
                        Submit
                    </button>
                </p>
                <p class="control">
                    <button type="button" class="button is-light" formnovalidate  v-confirm="{
            loader: false,
            ok: okCallback,
            okText: 'Leave this page',
            cancelText: 'Stay on this page',                
            message: 'Leave this page without saving?'}">
                        Cancel
                    </button>
                </p>
            </div>
    </form>
</div>
<script language="javascript">
    window.Vue.use(VuejsDialog.main.default)

    let apiUrl = 'CheckName?name=';
    
    const app = new Vue({
        el: '#app',
        data: {
            errors: [],
            name: ''
        },
        methods: {
            okCallback: function () {
                window.location = '@Url.Action("Index", "Team")';
            },
            checkForm: function (e) {
                e.preventDefault();
                this.errors = [];
                fetch(apiUrl + encodeURIComponent(this.name))
                    .then(res => res.json())
                    .then(res => {
                        if (res.error) {
                            this.errors.push(res.error);
                        } else {
                            this.errors = []
                            document.forms[0].submit();
                        }
                    });
            }
        }
    })</script>